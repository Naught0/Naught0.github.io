3:I[9283,["657","static/chunks/c465da65-139426e5d0ed3441.js","579","static/chunks/579-ed2480d196fd7aa0.js","206","static/chunks/app/blog/%5Bslug%5D/layout-2c04ac4ffe831a12.js"],"BackButton"]
4:I[2080,[],""]
6:I[3517,[],""]
7:I[3504,["657","static/chunks/c465da65-139426e5d0ed3441.js","579","static/chunks/579-ed2480d196fd7aa0.js","206","static/chunks/app/blog/%5Bslug%5D/layout-2c04ac4ffe831a12.js"],"ToTopButton"]
2:T14f0,<h1>Combinator</h1>
<blockquote>
<p>Get an overview of what combos, infinite loops, and shenanigans are inside your Magic: The Gathering deck.</p>
</blockquote>
<p><img src="/combinator.jpeg" alt="" /></p>
<hr />
<p><a href="https://mtgcombinator.com">Combinator</a> is a tool to see what combos a Magic: The Gathering (MTG) deck contains. A combo is typically 2 or more cards which, when played together, will interact to form an often infinite loop, winning the game or putting you absurdly ahead.</p>
<p>When I began making Combinator, there was no great way to find combos in an arbitrary collection of cards, other than browsing <a href="https://edhrec.com/">EDHREC</a>. I needed a website that let me quickly discern what combinations of cards I should or could assemble while I was playing.</p>
<p>I also <strong>suck</strong> at MTG, so I definitely wanted to include the steps for executing some of the more elaborate combos.</p>
<h2>Tech</h2>
<p>Before we go too far into specifics, an overview of the stack. The site has evolved a few times, but generally I'm using python for the backend and React for the frontend.</p>
<p><strong>Backend</strong>: Flask (later FastAPI), Pandas</p>
<p><strong>Frontend</strong>: React, Bulma CSS (later, a combo of Bulma + Tailwind)</p>
<p><strong>Hosting</strong>: I originally hosted the site entirely on Google Cloud Run. This meant that the python app was serving the React frontend only after a container cold start, which wasn't ideal. I eventually moved the frontend to Cloudflare Pages, which gets cached and instantly served for free, leaving the python API to be served by Google.</p>
<h2>Assembling the Wombo Combo</h2>
<p>The first thing I needed was a way to determine which MTG cards result in infinite combos when played together.</p>
<p>Luckily, as with most things, someone has already solved that problem for me. <a href="https://commanderspellbook.com/">Commander Spellbook</a> contains tens of thousands of MTG combos submitted by the community. They previously shipped their entire database of combos as part of their frontend bundle in a JSON blob. I loaded this blob into pandas to do the card-crunching.</p>
<p>The logic for finding combos looked something like this:</p>
<pre><code class="language-py">def find_matches(data: list[dict], to_match: set[str]):
    &quot;&quot;&quot;Finds combos in a given decklist based on card names&quot;&quot;&quot;
    db = pd.DataFrame(data)
    return {
        &quot;combos&quot;: db[
            db[&quot;c&quot;].apply(lambda x: set(x).issubset(to_match))
        ].to_dict(&quot;records&quot;)
    }
</code></pre>
<p>This checks the entire database of combos against the cards in the supplied deck.</p>
<p>Et voila, we now have all combinations of cards which occur in the database that are also present in our deck. This operation isn't exactly efficient, but it works reasonably well for a DB which contains 30,000+ combos when checked against 60+ card decks.</p>
<p>Sometime around the beginning of 2024 Commander Spellbook revamped their site, and their frontend became an API consumer instead of handling lookups client-side. This meant I was no longer able to keep an updated list of combos, so I too became a consumer of their API. This removed the need for pandas and any meaningful data crunching on the server.</p>
<p>The latest version of the site simply POSTs a list of cards to the Commander Spellbook API to get the same combinations.</p>
<pre><code class="language-py">@router.post(&quot;/combo&quot;, response_model=Results)
def combo_search(data: ComboSearchPayload):
    return requests.get(
        &quot;https://backend.commanderspellbook.com/find-my-combos&quot;,
        json=data.model_dump(mode=&quot;json&quot;),
    ).json()[&quot;results&quot;]
</code></pre>
<p>And it really isn't any faster than when I used pandas! Oh well.</p>
<h2>Features</h2>
<p>You can search for your <a href="https://moxfield.com">Moxfield</a> username, filter your decks, and click on any to get a list of combos it contains. You can also search with a link to a deck from Moxfield, <a href="https://archidekt.com">Archidekt</a> or <a href="https://www.mtggoldfish.com/">MTG Goldfish</a>.</p>
<p><img src="/combinator-user-search.png" alt="" /></p>
<p>Once you've selected a deck, the required cards for the combo are on the left, the effects of the combo on the right. You can click the combo to see a detailed list of steps and prerequisites.</p>
<video controls>
  <source src="/combinator.mp4" type="video/mp4">
</video>
<p>Click the &quot;Add 1&quot; tab to see combos that could be added to your list with the addition of a single card.</p>
<p><img src="/combinator-add-one.png" alt="" /></p>
<p>Finally, need to quickly find which cards say &quot;infect&quot; in your deck? You can search the titles and text of cards in your deck too.</p>
<p><img src="/combinator-search.png" alt="" /></p>
<h2>Conclusion</h2>
<p>My friends and I use this site almost every time we play MTG, which is extremely gratifying. I am always iterating on the UI, and I usually have a dozen ideas bouncing around at once. Eventually, I may forgo the python API (which costs me a whopping $0.05/mo from Google) and use Cloudflare Workers for completely free hosting.</p>
<p><a href="https://github.com/naught0/combinator">Check out the source on Github</a></p>
5:["slug","combinator","d"]
0:["Z1EUIm5-TF1fD1tMnHdxz",[[["",{"children":["blog",{"children":[["slug","combinator","d"],{"children":["__PAGE__?{\"slug\":\"combinator\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","combinator","d"],{"children":["__PAGE__",{},[["$L1",["$","article",null,{"children":[["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$2"}}],["$","hr",null,{}],["$","span",null,{"className":"inline-flex flex-wrap gap-2","children":[["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"python"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"flask"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"fastapi"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"pandas"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"typescript"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"react"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"webhosting"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"docker"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"cloudflare pages"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"google cloud run"}],["$","div",null,{"className":"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80 text-nowrap","children":"docker"}]]}]]}]],null],null]},[["$","div",null,{"className":"flex w-full flex-col items-center justify-start gap-6","children":[["$","div",null,{"className":"prose lg:prose-lg dark:prose-invert max-w-[95vw] pb-24 md:max-w-screen-sm lg:max-w-screen-md","children":[["$","div",null,{"className":"py-6","children":["$","$L3",null,{}]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$5","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}],["$","$L7",null,{}]]}],null],null]},[["$","div",null,{"className":"flex flex-col","children":[["$","nav",null,{"className":"flex w-full flex-row justify-between gap-3 border-b-2 border-b-slate-300 bg-black px-6 py-3","children":[["$","div",null,{"className":"flex flex-row justify-start gap-3","children":["$","a",null,{"href":"/","className":"text-3xl transition-all hover:scale-105 hover:opacity-100 sm:text-4xl inline-flex items-center gap-1","children":[["$","svg",null,{"stroke":"currentColor","fill":"none","strokeWidth":"1.5","viewBox":"0 0 24 24","aria-hidden":"true","children":["$undefined",[["$","path","0",{"strokeLinecap":"round","strokeLinejoin":"round","d":"m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25","children":[]}]]],"className":"$undefined","style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","span",null,{"className":"font-display text-base font-black","children":"jamese.dev"}]]}]}],["$","div",null,{"className":"flex flex-row justify-end gap-3"}]]}],["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]}],null],null]},[["$","html",null,{"lang":"en","children":[["$","head",null,{}],["$","body",null,{"className":"dark min-h-screen bg-background font-sans antialiased __variable_aaf875 __variable_1e1a75 __variable_2c91d1","children":[["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L6",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","div",null,{"className":"flex w-full flex-col items-center border-t border-t-slate-300 bg-black py-24 text-sm lg:py-36","children":["$","p",null,{"children":["made by"," ",["$","a",null,{"href":"https://github.com/naught0","className":"inline-flex items-center gap-1 text-primary-foreground transition-colors hover:text-slate-400 underline","children":"james"}]," ","with 🐐"]}]}]]}]]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5702b217343e5b91.css","precedence":"next","crossOrigin":"$undefined"}]],"$L8"]]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"James' Projects: combinator"}],["$","meta","3",{"name":"description","content":"Paste in a link to your Magic: The Gathering deck & immediately get an overview of what combos, loops, and shenanigans are inside. Also suggests combos that only require a single extra card."}],["$","link","4",{"rel":"author","href":"https://jamese.dev"}],["$","meta","5",{"name":"author","content":"Jamese E"}],["$","link","6",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","7",{"name":"next-size-adjust"}]]
1:null
